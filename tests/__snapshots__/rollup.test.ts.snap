// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`augmentations > expect no augmentations 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {


}
"
`;

exports[`augmentations > expect no augmentations 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    core__namespace.info("hello world!");
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`augmentations > expect only inputs to be augmented 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;


}
"
`;

exports[`augmentations > expect only inputs to be augmented 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`augmentations > expect only outputs to be augmented 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`augmentations > expect only outputs to be augmented 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    core__namespace.setOutput("message", "Hello, World!");
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`custom output path 1`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`custom output path 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 1`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`expect no \`actions-kit.d.ts\` file generated if plugin not in use 1`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`inject > expect \`ACTION_INPUTS\` & \`ACTION_OUTPUTS\` in global scope 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_INPUTS = {
    "type": "type",
    "who-to-greet": "who-to-greet",
  };

  export const ACTION_OUTPUTS = {
    "message": "message",
  };

}

declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`inject > expect \`ACTION_INPUTS\` & \`ACTION_OUTPUTS\` in global scope 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

globalThis.ACTION_INPUTS = {"type":{"description":"The type of greeting","required":true},"who-to-greet":{"description":"Who to greet","required":true}};
globalThis.ACTION_OUTPUTS = {"message":{"description":"The greeting message"}};
async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`inject > expect \`ACTION_INPUTS\` in global scope 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_INPUTS = {
    "type": "type",
    "who-to-greet": "who-to-greet",
  };

}

declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;


}
"
`;

exports[`inject > expect \`ACTION_INPUTS\` in global scope 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

globalThis.ACTION_INPUTS = {"type":{"description":"The type of greeting","required":true},"who-to-greet":{"description":"Who to greet","required":true}};
async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`inject > expect \`ACTION_OUTPUTS\` in global scope 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_OUTPUTS = {
    "message": "message",
  };

}

declare module "@actions/core" {

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`inject > expect \`ACTION_OUTPUTS\` in global scope 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

globalThis.ACTION_OUTPUTS = {"message":{"description":"The greeting message"}};
async function run() {
    core__namespace.setOutput("message", "Hello, World!");
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`inject > expect no change in global scope 1`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`inject > expect no change in global scope 2`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;
