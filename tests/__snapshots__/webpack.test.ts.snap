// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`augmentations > expect no augmentations 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-augmentations-expect-no-augmentations/index.ts

async function run() {
    core_namespaceObject.info("hello world!");
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`augmentations > expect no augmentations 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {


}
"
`;

exports[`augmentations > expect only inputs to be augmented 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-augmentations-expect-only-inputs-to-be-augmented/index.ts

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`augmentations > expect only inputs to be augmented 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;


}
"
`;

exports[`augmentations > expect only outputs to be augmented 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-augmentations-expect-only-outputs-to-be-augmented/index.ts

async function run() {
    core_namespaceObject.setOutput("message", "Hello, World!");
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`augmentations > expect only outputs to be augmented 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`custom output path 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-custom-output-path/index.ts

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
    core_namespaceObject.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`custom output path 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-expect-actions-kit-d-ts-to-be-generated/index.ts

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
    core_namespaceObject.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`expect no \`actions-kit.d.ts\` file generated if plugin not in use 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-expect-no-actions-kit-d-ts-file-generated-if-plugin-not-in-use/index.ts

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
    core_namespaceObject.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`inject > expect \`ACTION_INPUTS\` & \`ACTION_OUTPUTS\` in global scope 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-inject-expect-ACTION_INPUTS-ACTION_OUTPUTS-in-global-scope/index.ts
globalThis.ACTION_INPUTS = { "type": "type", "who-to-greet": "who-to-greet" };
globalThis.ACTION_OUTPUTS = { "message": "message" };
;

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
    core_namespaceObject.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});
;

/******/ })()
;"
`;

exports[`inject > expect \`ACTION_INPUTS\` & \`ACTION_OUTPUTS\` in global scope 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_INPUTS = {
    "type": "type",
    "who-to-greet": "who-to-greet",
  };

  export const ACTION_OUTPUTS = {
    "message": "message",
  };

}

declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`inject > expect \`ACTION_INPUTS\` in global scope 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-inject-expect-ACTION_INPUTS-in-global-scope/index.ts
globalThis.ACTION_INPUTS = { "type": "type", "who-to-greet": "who-to-greet" };
;

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});
;

/******/ })()
;"
`;

exports[`inject > expect \`ACTION_INPUTS\` in global scope 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_INPUTS = {
    "type": "type",
    "who-to-greet": "who-to-greet",
  };

}

declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;


}
"
`;

exports[`inject > expect \`ACTION_OUTPUTS\` in global scope 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-inject-expect-ACTION_OUTPUTS-in-global-scope/index.ts
globalThis.ACTION_OUTPUTS = { "message": "message" };
;

async function run() {
    core_namespaceObject.setOutput("message", "Hello, World!");
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});
;

/******/ })()
;"
`;

exports[`inject > expect \`ACTION_OUTPUTS\` in global scope 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";

declare global {
  export const ACTION_OUTPUTS = {
    "message": "message",
  };

}

declare module "@actions/core" {

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;

exports[`inject > expect no change in global scope 1`] = `
"/******/ (() => { // webpackBootstrap
/******/ 	"use strict";

;// external "@actions/core"
const core_namespaceObject = require("@actions/core");
;// ./.vitest-testdirs/vitest-webpack-inject-expect-no-change-in-global-scope/index.ts

async function run() {
    const type = core_namespaceObject.getInput("type");
    const whoToGreet = core_namespaceObject.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core_namespaceObject.info(message);
    if (type === "error") {
        core_namespaceObject.setFailed("This is an error!");
    }
    core_namespaceObject.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core_namespaceObject.setFailed(err.message);
});

/******/ })()
;"
`;

exports[`inject > expect no change in global scope 2`] = `
"/* eslint-disable */
// @ts-nocheck
// generated by 'actions-kit'

import type * as core from "@actions/core";



declare module "@actions/core" {

  type ActionInputName = "type" | "who-to-greet";

  export function getInput(name: ActionInputName, options?: core.InputOptions): string;

  type ActionOutputName = "message";

  export function setOutput(name: ActionOutputName, value: any): void;


}
"
`;
